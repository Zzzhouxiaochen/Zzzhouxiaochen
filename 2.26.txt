1.编写函数： unsigned int reverse_bit(unsigned int value); 这个函数的返回值value的二进制位模式从左到右翻转后的值


#include <stdio.h>
#include<stdlib.h>
#include <math.h>

 

unsigned int reverse_bit(unsigned int value)

{

	int i = 0;

	int sum = 0;

	int b = 0;

	for (i=0; i<32; i++)

	{

		b = ((value>>i)&1)*pow(2,31-i);

		sum += b;

	}

	return sum;

}

 

int main()

{

	int a = 25;

	int ret = 0;

	ret = reverse_bit(a);

	printf("%u\n", ret);//此处一定要用%u而不是%d的，因为若最高位为1，ret代表的是有符号数，其结果为负数    
     system("pause");
        return 0;
}



2.不使用（a+b）/2这种方式，求两个数的平均值。 
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int num1 = 0;
    int num2 = 0;
    scanf("%d%d", &num1, &num2);
    int avg = num1 - (num1 - num2) / 2;
    printf("%d", avg);
    system("pause");
    return 0;
}



3.编程实现： 
一组数据中只有一个数字出现了一次。其他所有数字都是成对出现的。 
请找出这个数字。（使用位运算） 
#include<stdio.h>
#include<stdlib.h>

int main(){
	int arr[] = { 2, 45, 6, 2, 5, 8, 8, 45, 5 };
	int num = sizeof(arr) / sizeof(arr[0]);
	int t = arr[0];
	for (int i = 1; i < num; i++){
		t = t ^ arr[i];
	}
	printf("%d\n", t);
	system("pause");
	return 0;
}


4.有一个字符数组的内容为:"student a am i", 
请你将数组的内容改为"i am a student". 
要求： 
不能使用库函数。 
只能开辟有限个空间（空间个数和字符串的长度无关）。 


#include<stdio.h>

#include<string.h>

#include<assert.h>

void reverse(char *start, char *end)

{

	assert(start);

	assert(end);

	while (start < end)

	{

		char temp = *start;

		*start = *end;

		*end = temp;

		start++;

		end--;

	}

}

 

void reverse_str(char *str, int sz)

{

	assert(str);               //检测传入的字符串

	char *str1 = str;

	char *left = str;

	char *right = str + sz - 1;

	reverse(left, right);         //先将字符串整体反转

	while (*str1)

	{

		left = str1;

		while ((*str1 != '\0') && (*str1 != ' ')) //找到单词，此处一定要加(*str1 != '\0')条件限制，因为找到最后一个单词的时候，*str1永远也不为空格

		{

			str1++;

		}

			right = str1 - 1;               //此时str1指向单词后方的空格，需要减一方能指向单词的最后一个字母

			reverse(left, right);               //继整体反转后再次反转单词，能使单词拼写顺序恢复过来

			if (*str1 == ' ')             //等于空格让指针后移一位否则不能参与下次循环。

			{

				str1++;

			}

	}

}

 

int main()

{

	char arr[] = "student a am i";

	int sz = strlen(arr);

	reverse_str(arr, sz);

	printf("%s", arr);

	getchar();

	return 0;

}

